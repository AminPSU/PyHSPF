The examples provided in this folder illustrate how to use PyHSPF. They are organized into several groups to illustrate different concepts needed to use HSPF and how PyHSPF can help accomplish these tasks. The examples are set up so that the assumptions in a particular script can be modified. For example, start and end dates, watershed HUC, or latitudes/longitudes are intended to be arbitrary choices that are flexible. Please try to adapt these scripts and report attempts to change the assumptions that result in errors. 

The concepts for the examples in each subdirectory are described below. 

Introduction -- These examples are designed to illustrate how HSPF organizes information about the world into a computer program and how PyHSPF can be used to interact with HSPF. The data supplied directly in these scripts can be supplied using the extraction and processing tools in the other sections.

Tests -- These scripts were developed to run the test simulations distributed with the HSPF source code. The scripts may be of interest to HSPF modelers who are already familiar with HSPF and want a deeper understanding of how PyHSPF interacts with the HSPF library. Information from the real world must be translated into the User Control Input (UCI) and Watershed Data Management (WDM) files to perform HSPF simulations. Existing UCI files could be adapted and run in Python using the approaches outlines in these examples. 

GIS data examples -- Python has many modules that are useful for working with Geographic Information Systems (GIS) data. HSPF models require hydrography and land use data that are associated with GIS. PyHSPF integrates built-in Python modules with extension modules (PyShp and GDAL) to extract data from a few particularly useful publically-available data sets including the National Hydrography Dataset Plus Version 2 (NHDPlus), the Cropland Data Layer (CDL), and the National Inventory of Dams (NID). These tools can expedite extraction and integration of data in new watersheds into HSPF models in the United States. Similar tools could be developed for other publically-available datasets.

Time series extraction -- HSPF is centered around manipulations of time series, and it is necessary to supply many external time series to use HSPF. PyHSPF has utilities to gather time series data from several publically-available databases including the National Water Information System (NWIS), the Global Historical Climate Network Daily (GHCND) database, the Global Summary of the Day (GSOD) database, the National Solar Radiation Database (NSRDB), and the hourly precipitation database (3240). 

Time Series Processing -- The raw time series data gathered from the various databases are typically not suitable for hydrologic modeling for a variety of reasons. For example, some of the data may be missing or errors may have been made in reporting. HSPF models require estimates of the conditions throughout the watershed, so "point" observations from individual stations must be interpolated/extrapolated throughout the watershed. There are many different ways to aggregate and disaggregate the time series data. PyHSPF has a ClimateProcessor class to assist with these tasks. 

Special Actions -- This section needs work, but there is one example. Special Actions are designed to represent how the activities of humans modify hydrological processes in HSPF. Some examples of this include tilling, harvesting, pesticide and fertilizer applications.

Advanced -- The scripts in this directory illustrate how to integrate together the data into more complicated models. This section needs work.

Suggestions and questions are always welcome. Note that these examples may not be compatible with older versions of the software. Please report any problems running the scripts in these directories (although do check that any required data files in the right location first).
